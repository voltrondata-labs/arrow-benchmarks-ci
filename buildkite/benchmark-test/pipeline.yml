steps:
  - block: "Test Benchmark Builds"
    prompt: "Select machines where you want to run a test build"
    fields:
      - select: "Machines"
        key: "machines"
        required: true
        multiple: true
        options:
          - label: "ec2-t3-xlarge-us-east-2 (Fastest build but only has Python benchmarks)"
            value: "ec2-t3-xlarge-us-east-2"
          - label: "ec2-m5-4xlarge-us-east-2"
            value: "ec2-m5-4xlarge-us-east-2"
          - label: "ec2-r5-4xlarge-us-east-2"
            value: "ec2-r5-4xlarge-us-east-2"
          - label: "ec2-c6a-4xlarge-us-east-2"
            value: "ec2-c6a-4xlarge-us-east-2"
          - label: "arm64-m6g-linux-compute (Preferable for testing builds with C++, Python, R benchmarks)"
            value: "arm64-m6g-linux-compute"
          - label: "arm64-t4g-linux-compute"
            value: "arm64-t4g-linux-compute"
          - label: "ursa-thinkcentre-m75q (Please avoid using this machine for running test builds)"
            value: "ursa-thinkcentre-m75q"
          - label: "test-mac-arm (Please avoid using this machine for running test builds)"
            value: "test-mac-arm"

  - label: "Test Benchmark Builds"
    command: |
      echo "$(buildkite-agent meta-data get machines)"
      docker run -it \
        -e MACHINES="$(buildkite-agent meta-data get machines)" \
        -e BUILDKITE_API_BASE_URL=${BUILDKITE_API_BASE_URL} \
        -e BUILDKITE_ORG=${BUILDKITE_ORG} \
        -e BUILDKITE_API_TOKEN=${BUILDKITE_API_TOKEN} \
        -e BRANCH=${BUILDKITE_BRANCH} \
        -e COMMIT=${BUILDKITE_COMMIT} \
        $(docker build -q .) python -m buildkite.benchmark-test.run_test_builds
    agents:
      queue: "arrow-bci"
